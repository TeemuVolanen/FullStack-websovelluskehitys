{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","props","value","onChange","PersonForm","onSubmit","value1","onChange1","value2","onChange2","type","Person","person","deletePerson","name","number","onClick","baseUrl","personService","getAll","axios","get","then","response","data","create","newObject","post","id","console","log","delete","update","put","Notification","message","notificationStyle","color","fontStyle","fontSize","border","backgroundColor","borderRadius","margin","padding","style","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","showAll","setShowAll","aMessage","setAMessage","useEffect","initialPersons","personsToShow","filter","toLowerCase","includes","event","target","preventDefault","personObject","length","window","confirm","find","p","changedPerson","returnedPerson","map","setTimeout","concat","deleteId","catch","error","deletePersonOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5330d981.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ( props ) => {\n  return (\n    <div>\n      filter shown with:\n      <input\n        value={props.value}\n        onChange={props.onChange}\n      />\n    </div>\n  )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = ( props ) => {\n  return (\n    <form onSubmit={props.onSubmit}>\n      <div>\n        name:\n        <input\n          value={props.value1}\n          onChange={props.onChange1} \n        />\n      </div>\n      <div>\n        number:\n        <input\n          value={props.value2}\n          onChange={props.onChange2} \n        />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>    \n  )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Person = ({ person, deletePerson }) => {\n  return (\n    <li>{person.name} {person.number} <button onClick={deletePerson}>delete</button></li>\n  )\n}\n\nexport default Person","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst deletePerson = (id) => {\n    console.log(id)\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst personService = { \n  getAll, create, deletePerson, update\n}  \n  \nexport default personService","import React from 'react'\n\nconst Notification = ({ message }) => {\n  const notificationStyle = (message[1])\n  ? {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 20,\n    border: '2px solid #73AD21',\n    backgroundColor: '#DCDCDC',\n    borderRadius: '5px',\n    margin: '10px',\n    padding: '10px'\n    }\n  : {\n    color: 'red',\n    fontStyle: 'italic',\n    fontSize: 20,\n    border: '2px solid red',\n    backgroundColor: '#DCDCDC',\n    borderRadius: '5px',\n    margin: '10px',\n    padding: '10px'\n    } \n\n  if (message[0] === null) {\n    return null\n  }\n\n  return (\n    <div style={notificationStyle}>\n      {message[0]}\n    </div>\n  )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter.js'\nimport PersonForm from './components/PersonForm.js'\nimport Person from './components/Person'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [showAll, setShowAll] = useState('')\n  const [aMessage, setAMessage] = useState([null, true])\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n      setPersons(initialPersons)\n    })\n  }, [])\n  \n  const addName = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    }\n\n    if (persons.filter(person => person.name === newName).length > 0) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const person = persons.find(p => p.name === newName)\n        const changedPerson = {...person, number: newNumber}\n        personService\n        .update(person.id, changedPerson)\n          .then(returnedPerson => {\n          setPersons(persons.map(person => person.name !== newName ? person : returnedPerson))\n          setAMessage([`Changed ${returnedPerson.name}'s number `, true])\n          setTimeout(() => {\n            setAMessage([null, true])\n          }, 5000)  \n        })    \n      }\n    } else {\n      personService\n      .create(personObject)\n        .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNewName('')\n        setNewNumber('')\n        setAMessage([`Added ${returnedPerson.name} `, true])\n        setTimeout(() => {\n          setAMessage([null, true])\n        }, 5000)\n      })\n    }\n  }\n\n  const handleShowAll = (event) => {\n    console.log(event.target.value)\n    setShowAll(event.target.value)\n  }\n  \n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }  \n  \n  const personsToShow = (showAll === '')\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().includes(showAll.toLowerCase()))\n\n  const deletePersonOf = person => {\n    const deleteId = person.id\n    if (window.confirm(`Delete ${person.name} ?`)) {\n      personService\n        .deletePerson(deleteId)\n          .then(setPersons(persons.filter(person => person.id !== deleteId)))\n          .catch(error => {\n            setAMessage([`Information of ${person.name} has already been removed from server `, false])\n            setTimeout(() => {\n              setAMessage([null, true])\n            }, 5000)        \n          })\n          setAMessage([`${person.name} deleted `, true])\n          setTimeout(() => {\n            setAMessage([null, true])\n          }, 5000)      \n    }\n  }\n\n    \n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={aMessage} />\n      <Filter value={showAll} onChange={handleShowAll} />\n      <h2>add a new</h2>\n      <PersonForm onSubmit={addName}\n        value1={newName} onChange1={handleNameChange}\n        value2={newNumber} onChange2={handleNumberChange} \n      />\n      <h2>Numbers</h2>\n      <ul>\n        {personsToShow.map(person =>\n          <Person\n            key={person.name}\n            person={person}\n            deletePerson={() => deletePersonOf(person)}\n          />\n        )} \n      </ul>\n    </div>\n  )\n\n}\n\nexport default App","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}